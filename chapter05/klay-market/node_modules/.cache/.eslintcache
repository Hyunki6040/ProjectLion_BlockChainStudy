[{"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/index.js":"1","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js":"2","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/reportWebVitals.js":"3","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/api/UseCaver.js":"4","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/api/UseKlip.js":"5","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/constants/index.js":"6","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/constants/constants.cypress.js":"7"},{"size":500,"mtime":1644042340092,"results":"8","hashOfConfig":"9"},{"size":2786,"mtime":1644051279218,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1644042340016,"results":"11","hashOfConfig":"9"},{"size":1525,"mtime":1644050326541,"results":"12","hashOfConfig":"9"},{"size":1817,"mtime":1644047964384,"results":"13","hashOfConfig":"9"},{"size":36,"mtime":1644042340144,"results":"14","hashOfConfig":"9"},{"size":446,"mtime":1644047903161,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"3v740m",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/index.js",[],["32","33"],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js",["34"],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/reportWebVitals.js",[],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/api/UseCaver.js",["35"],"import Caver from 'caver-js';\nimport KIP17ABI from '../abi/KIP17TokenABI.json';\nimport {ACCESS_KEY_ID, SECRET_ACCESS_KEY, NFT_CONTRACT_ADDRESS, MARKET_CONTRACT_ADDRESS, CHAIN_ID} from '../constants';\n\nconst option = {\n\theaders: [\n\t\t{\n\t\t\tname: \"Authorization\",\n\t\t\tvalue: \"Basic \" + Buffer.from(ACCESS_KEY_ID + \":\" + SECRET_ACCESS_KEY).toString(\"base64\")\n\t\t},\n\t\t{\n\t\t\tname: \"x-chain-id\", value: CHAIN_ID\n\t\t}\n\t]\n}\n\nconst caver = new Caver(new Caver.providers.HttpProvider(\"https://node-api.klaytnapi.com/v1/klaytn\", option));\nconst NFTContract = new caver.contract(KIP17ABI,NFT_CONTRACT_ADDRESS);\n\n\nexport const fetchCardsOf = async (address) => {\n\t// Fetch getBalance\n\tconst balance = await NFTContract.methods.balanceOf(address).call();\n\tconsole.log(`[NFT Balance] ${balance}`);\n\t// Fetch Token IDs\n\tconst tokenIds = [];\n\tfor(let i =0; i<balance; i++){\n\t\tconst id = await NFTContract.methods.tokenOfOwnerByIndex(address, i).call();\n\t\ttokenIds.push(id);\n\t}\n\t\n\t// Fetch Token URIs\n\tconst tokenUris = [];\n\tfor(let i =0; i<balance; i++){\n\t\tconst uri = await NFTContract.methods.tokenURI(tokenIds[i]).call();\n\t\ttokenUris.push(uri);\n\t}\n\t\n\tconst nfts = [];\n\tfor(let i =0; i<balance; i++){\n\t\tnfts.push({uri: tokenUris[i], id: tokenIds[i] });\n\t}\n\tconsole.log(nfts);\n\treturn nfts;\n}\n\nexport const getBalance = (address) => {\n\treturn caver.rpc.klay.getBalance(address).then((respose) => {\n\t\tconst balance = caver.utils.convertFromPeb(caver.utils.hexToNumberString(respose));\n\t\tconsole.log(`BALANCE: ${balance}`); \n\t\treturn balance;\n\t})\n}\n","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/api/UseKlip.js",[],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/constants/index.js",[],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/constants/constants.cypress.js",[],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":32,"column":8,"nodeType":"42","messageId":"43","endLine":32,"endColumn":23},{"ruleId":"40","severity":1,"message":"44","line":3,"column":65,"nodeType":"42","messageId":"43","endLine":3,"endColumn":88},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'fetchMarketNFTs' is assigned a value but never used.","Identifier","unusedVar","'MARKET_CONTRACT_ADDRESS' is defined but never used.","no-global-assign","no-unsafe-negation"]