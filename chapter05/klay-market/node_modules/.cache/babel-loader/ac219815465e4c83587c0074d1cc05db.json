{"ast":null,"code":"var _jsxFileName = \"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { getBalance, fetchCardsOf } from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\";\nimport { Alert, Container, Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\n\nfunction App() {\n  _s();\n\n  // State Data\n  // Global Data(Domain Data)\n  // address\n  // nft\n  const [nfts, setNfts] = useState([]); // {tokenId: '101', tokenUri: \"\"}\n\n  const [myBalance, setMyBalance] = useState(\"0\");\n  const [myAddress, setMyAddress] = useState(DEFAULT_ADDRESS); // UI\n\n  const [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE); // tab\n  //mintInput\n  // Modal\n  //fetchMarketNFT\n  //fetchMyNFTs\n\n  const fetchMyNFTs = async () => {\n    const _nfts = await fetchCardsOf(\"0x7Eb53D88C87F40A95248913ec6F851Ca8441FE0b\");\n\n    setNfts(_nfts); // [{tokenId:100, tokenUri: \"https://~~.png}, {tokenId:100, tokenUri: \"https://~~.jpg}]\n    // balanceOf -> 내가 가진 전체 NFT 토큰 개수를 가져온다\n    // tokenOfOwnerByIndex -> 내가 가진 NFT token Id를 하나씩 가져온다 -> 배열로\n    // 주소, 0 -> 100\n    // 주소, 1 -> 101\n    // tokenURI -> 앞에서 가져온 tokenId를 이요해서 tokenURI를 하나씩 가져온다.\n    // 100 -> ~~.png\n    // 101 -> ~~.jpg\n  }; // onClickMint\n  // onClickMyCard\n  // onClickMarketCard\n  // getUserData\n\n\n  const getUserData = () => {\n    KlipAPI.getAddress(setQrvalue, async address => {\n      setMyAddress(address);\n\n      const _balance = await getBalance(address);\n\n      setMyBalance(_balance);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 30,\n          fontWeight: \"bold\",\n          paddingLeft: 5,\n          marginTop: 10\n        },\n        children: \"\\uB0B4 \\uC9C0\\uAC11\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 4\n      }, this), myAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        onClick: getUserData,\n        variant: \"balance\",\n        style: {\n          backgroundColor: \"skyblue\",\n          fontSize: 25\n        },\n        children: myBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: 0,\n          width: \"100%\"\n        },\n        children: nfts.map((nft, index) => {\n          /*#__PURE__*/\n          _jsxDEV(Card.Img, {\n            className: \"img-responsive\",\n            src: nfts[index].uri\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 6\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        backgroundColor: 'white',\n        width: 300,\n        height: 300,\n        padding: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrvalue,\n        size: 256,\n        style: {\n          margin: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMyNFTs,\n      children: \"NFT \\uAC00\\uC838\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"n8ePqWTeFm3NyF3rX4jrS/i3xGA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js"],"names":["React","useState","QRCode","getBalance","fetchCardsOf","KlipAPI","Alert","Container","Card","DEFAULT_QR_CODE","DEFAULT_ADDRESS","App","nfts","setNfts","myBalance","setMyBalance","myAddress","setMyAddress","qrvalue","setQrvalue","fetchMyNFTs","_nfts","getUserData","getAddress","address","_balance","backgroundColor","padding","fontSize","fontWeight","paddingLeft","marginTop","width","map","nft","index","uri","height","margin"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport QRCode from \"qrcode.react\";\nimport {getBalance, fetchCardsOf} from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\"\nimport { Alert, Container, Card } from \"react-bootstrap\";\n\n\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\nfunction App() {\n\t// State Data\n\t\n\t// Global Data(Domain Data)\n\t// address\n\t// nft\n\tconst [nfts, setNfts] = useState([]); // {tokenId: '101', tokenUri: \"\"}\n\tconst [myBalance, setMyBalance] = useState(\"0\");\n\tconst [myAddress, setMyAddress] = useState(DEFAULT_ADDRESS);\n\t\n\t// UI\n\tconst [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE);\n\t// tab\n\t//mintInput\n\t\n\t// Modal\n\t\n\t//fetchMarketNFT\n\t//fetchMyNFTs\n\tconst fetchMyNFTs = async () => {\n\t\tconst _nfts = await fetchCardsOf(\n\t\t\t\"0x7Eb53D88C87F40A95248913ec6F851Ca8441FE0b\"\n\t\t);\n\t\tsetNfts(_nfts);\n\t\t// [{tokenId:100, tokenUri: \"https://~~.png}, {tokenId:100, tokenUri: \"https://~~.jpg}]\n\t\t// balanceOf -> 내가 가진 전체 NFT 토큰 개수를 가져온다\n\t\t// tokenOfOwnerByIndex -> 내가 가진 NFT token Id를 하나씩 가져온다 -> 배열로\n\t\t// 주소, 0 -> 100\n\t\t// 주소, 1 -> 101\n\t\t// tokenURI -> 앞에서 가져온 tokenId를 이요해서 tokenURI를 하나씩 가져온다.\n\t\t// 100 -> ~~.png\n\t\t// 101 -> ~~.jpg\n\t}\n\t// onClickMint\n\t// onClickMyCard\n\t// onClickMarketCard\n\t\n\t// getUserData\n\tconst getUserData = () => {\n\t\tKlipAPI.getAddress(setQrvalue, async (address) => {\n\t\t\tsetMyAddress(address);\n\t\t\tconst _balance = await getBalance(address);\n\t\t\tsetMyBalance(_balance);\n\t\t});\n\t};\n  return (\n    <div className=\"App\">\n\t\t<div style={{backgroundColor: \"black\", padding: 10}}>\n\t\t\t<div style={{fontSize:30, fontWeight: \"bold\", paddingLeft:5, marginTop:10}}>내 지갑</div>\n\t\t\t{myAddress}\n\t\t\t<br/>\n\t\t\t<Alert \n\t\t\t\tonClick={getUserData}\n\t\t\t\tvariant={\"balance\"} style={{backgroundColor:\"skyblue\", fontSize: 25 }}>{myBalance}</Alert>\n\t\t\t\n\t\t\t{/* 갤러리(마켓, 내 지갑) */}\n\t\t\t\n\t\t\t<div className=\"container\" style={{padding:0, width:\"100%\"}}>\n\t\t\t\t{nfts.map((nft, index) => {\n\t\t\t\t\t<Card.Img className=\"img-responsive\" src={nfts[index].uri} />\n\t\t\t\t})}\n\t\t\t</div>\n\t  \t</div>\n\t\t{/* 주소 잔고 */}\n  \t\t<Container style={{backgroundColor:'white', width:300, height:300, padding:20}}>\n\t\t\t<QRCode value={qrvalue} size={256} style={{ margin: \"auto\"}}/>\t\n\t  \t</Container>\n\t  \t<button onClick={fetchMyNFTs}>\n\t  \t\tNFT 가져오기\n\t\t  </button>\n\t\t\n\t\t{/* 발행페이지 */}\n\t\t{/* 탭 */}\n\t\t{/* 모달 */}\t\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}