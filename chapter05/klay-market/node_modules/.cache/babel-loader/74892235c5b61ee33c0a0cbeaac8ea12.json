{"ast":null,"code":"var _jsxFileName = \"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { getBalance, fetchCardsOf } from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\";\nimport { Alert, Container, Card, Nav, Button, Form } from \"react-bootstrap\";\nimport { MARKET_CONTRACT_ADDRESS } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\n\nfunction App() {\n  _s();\n\n  // State Data\n  // Global Data(Domain Data)\n  // address\n  // nft\n  const [nfts, setNfts] = useState([]); // {tokenId: '101', tokenUri: \"\"}\n\n  const [myBalance, setMyBalance] = useState(\"0\"); //const [myAddress, setMyAddress] = useState(DEFAULT_ADDRESS);\n  //임시 for TEST\n\n  const [myAddress, setMyAddress] = useState(\"0x7Eb53D88C87F40A95248913ec6F851Ca8441FE0b\"); // UI\n\n  const [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE);\n  const [tab, setTab] = useState(\"MARKET\"); // MARKET, MINT, WALLET\n\n  const [mintImageUrl, setMintImageUrl] = useState(\"\"); // tab\n  //mintInput\n  // Modal\n  //fetchMarketNFT\n\n  const fetchMarketNFTs = async () => {\n    const _nfts = await fetchCardsOf(MARKET_CONTRACT_ADDRESS);\n\n    setNfts(_nfts);\n  }; //fetchMyNFTs\n\n\n  const fetchMyNFTs = async () => {\n    const _nfts = await fetchCardsOf(myAddress);\n\n    setNfts(_nfts); // [{id:100, uri: \"https://~~.png}, {id:100, uri: \"https://~~.jpg}]\n    // balanceOf -> 내가 가진 전체 NFT 토큰 개수를 가져온다\n    // tokenOfOwnerByIndex -> 내가 가진 NFT token Id를 하나씩 가져온다 -> 배열로\n    // 주소, 0 -> 100\n    // 주소, 1 -> 101\n    // tokenURI -> 앞에서 가져온 tokenId를 이요해서 tokenURI를 하나씩 가져온다.\n    // 100 -> ~~.png\n    // 101 -> ~~.jpg\n  }; // onClickMint\n\n\n  const onClickMint = async uri => {\n    if (myAddress === DEFAULT_ADDRESS) alert(\"NO ADDRESS\");\n    const randomTokenId = parseInt(Math.random() * 100000000);\n    KlipAPI.mintCardWithURI(myAddress, randomTokenId, uri, setQrvalue, result => {\n      alert(JSON.stringify(result));\n    });\n  };\n\n  const onClickCard = id => {\n    if (tab === 'WALLET') {\n      onClickMyCard(id);\n    }\n\n    if (tab === 'MARKET') {\n      onClickMarketCard(id);\n    }\n  };\n\n  const onClickMyCard = tokenId => {\n    KlipAPI.listingCard(myAddress, tokenId, setQrvalue, result => {\n      alert(JSON.stringify(result));\n    });\n  };\n\n  const onClickMarketCard = tokenId => {\n    KlipAPI.buyCard(tokenId, setQrvalue, result => {\n      alert(JSON.stringify(result));\n    });\n  }; // onClickMyCard\n  // onClickMarketCard\n  // getUserData\n\n\n  const getUserData = () => {\n    KlipAPI.getAddress(setQrvalue, async address => {\n      setMyAddress(address);\n\n      const _balance = await getBalance(address);\n\n      setMyBalance(_balance);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 30,\n          fontWeight: \"bold\",\n          paddingLeft: 5,\n          marginTop: 10\n        },\n        children: \"\\uB0B4 \\uC9C0\\uAC11\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 4\n      }, this), myAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        onClick: getUserData,\n        variant: \"balance\",\n        style: {\n          backgroundColor: \"skyblue\",\n          fontSize: 25\n        },\n        children: myBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          backgroundColor: 'white',\n          width: 300,\n          height: 300,\n          padding: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(QRCode, {\n          value: qrvalue,\n          size: 256,\n          style: {\n            margin: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), tab === \"MARKET\" || tab === \"WALLET\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: 0,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: nfts.map((nft, index) => /*#__PURE__*/_jsxDEV(Card.Img, {\n            onClick: () => {\n              onClickCard(nft.id);\n            },\n            className: \"img-responsive\",\n            src: nfts[index].uri,\n            height: \"15%\"\n          }, `imagekey${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 5\n      }, this) : null, tab === \"MINT\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: 0,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center\",\n          style: {\n            color: \"black\",\n            height: \"50%\",\n            borderColor: \"#C5B358\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              oppacity: 0.9,\n              backgroundColor: \"black\"\n            },\n            children: [mintImageUrl !== \"\" ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: mintImageUrl,\n              height: \"30%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 9\n            }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  value: mintImageUrl,\n                  onChange: e => {\n                    console.log(e.target.value);\n                    setMintImageUrl(e.target.value);\n                  },\n                  type: \"text\",\n                  placeholder: \"\\uC774\\uBBF8\\uC9C0 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  onClickMint(mintImageUrl);\n                },\n                variant: \"primary\",\n                style: {\n                  backgroundColor: \"cadetblue\",\n                  borderColor: \"cadetblue\"\n                },\n                children: \"\\uBC1C\\uD589\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMyNFTs,\n      children: \"NFT \\uAC00\\uC838\\uC624\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      style: {\n        backgroundColor: \"#1b1717\",\n        height: 45\n      },\n      className: \"navbar fixed-bottom navbar-light\",\n      role: \"navigation\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row justify-content-around w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTab(\"MARKET\");\n              fetchMarketNFTs();\n            },\n            className: \"row d-flex flex-column justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"MARKET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTab(\"MINT\");\n              fetchMarketNFTs();\n            },\n            className: \"row d-flex flex-column justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"MINT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTab(\"WALLET\");\n              fetchMarketNFTs();\n            },\n            className: \"row d-flex flex-column justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"WALLET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fA94ojds8XMlEMNPn98Pcj5+OCg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js"],"names":["React","useState","QRCode","getBalance","fetchCardsOf","KlipAPI","Alert","Container","Card","Nav","Button","Form","MARKET_CONTRACT_ADDRESS","DEFAULT_QR_CODE","DEFAULT_ADDRESS","App","nfts","setNfts","myBalance","setMyBalance","myAddress","setMyAddress","qrvalue","setQrvalue","tab","setTab","mintImageUrl","setMintImageUrl","fetchMarketNFTs","_nfts","fetchMyNFTs","onClickMint","uri","alert","randomTokenId","parseInt","Math","random","mintCardWithURI","result","JSON","stringify","onClickCard","id","onClickMyCard","onClickMarketCard","tokenId","listingCard","buyCard","getUserData","getAddress","address","_balance","backgroundColor","padding","fontSize","fontWeight","paddingLeft","marginTop","width","height","margin","map","nft","index","color","borderColor","oppacity","e","console","log","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport QRCode from \"qrcode.react\";\nimport {getBalance, fetchCardsOf} from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\"\nimport { Alert, Container, Card, Nav, Button, Form} from \"react-bootstrap\";\nimport { MARKET_CONTRACT_ADDRESS } from \"./constants\";\n\n\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\nfunction App() {\n\t// State Data\n\t\n\t// Global Data(Domain Data)\n\t// address\n\t// nft\n\tconst [nfts, setNfts] = useState([]); // {tokenId: '101', tokenUri: \"\"}\n\tconst [myBalance, setMyBalance] = useState(\"0\");\n\t//const [myAddress, setMyAddress] = useState(DEFAULT_ADDRESS);\n\t//임시 for TEST\n\tconst [myAddress, setMyAddress] = useState(\"0x7Eb53D88C87F40A95248913ec6F851Ca8441FE0b\");\n\t\n\t// UI\n\tconst [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE);\n\tconst [tab, setTab] = useState(\"MARKET\"); // MARKET, MINT, WALLET\n\tconst [mintImageUrl, setMintImageUrl] = useState(\"\");\n\t// tab\n\t//mintInput\n\t\n\t// Modal\n\t\n\t//fetchMarketNFT\n\tconst fetchMarketNFTs = async () => {\n\t\tconst _nfts = await fetchCardsOf(MARKET_CONTRACT_ADDRESS);\n\t\tsetNfts(_nfts);\n\t}\n\t//fetchMyNFTs\n\tconst fetchMyNFTs = async () => {\n\t\tconst _nfts = await fetchCardsOf(myAddress);\n\t\t\n\t\tsetNfts(_nfts);\n\t\t// [{id:100, uri: \"https://~~.png}, {id:100, uri: \"https://~~.jpg}]\n\t\t// balanceOf -> 내가 가진 전체 NFT 토큰 개수를 가져온다\n\t\t// tokenOfOwnerByIndex -> 내가 가진 NFT token Id를 하나씩 가져온다 -> 배열로\n\t\t// 주소, 0 -> 100\n\t\t// 주소, 1 -> 101\n\t\t// tokenURI -> 앞에서 가져온 tokenId를 이요해서 tokenURI를 하나씩 가져온다.\n\t\t// 100 -> ~~.png\n\t\t// 101 -> ~~.jpg\n\t}\n\t// onClickMint\n\tconst onClickMint = async (uri) => {\n\t\tif(myAddress === DEFAULT_ADDRESS) alert(\"NO ADDRESS\");\n\t\tconst randomTokenId = parseInt(Math.random() * 100000000);\n\t\tKlipAPI.mintCardWithURI(\n\t\t\tmyAddress, randomTokenId, uri, setQrvalue, (result) => {\n\t\t\t\talert(JSON.stringify(result));\n\t\t})\n\t}\n\tconst onClickCard = (id) => {\n\t\tif (tab === 'WALLET'){\n\t\t\tonClickMyCard(id);\t\n\t\t}\n\t\tif (tab === 'MARKET'){\n\t\t\tonClickMarketCard(id);\t\n\t\t}\n\t}\n\tconst onClickMyCard = (tokenId) => {\n\t\tKlipAPI.listingCard(myAddress, tokenId, setQrvalue, (result) =>{\n\t\t\talert(JSON.stringify(result));\n\t\t});\n\t}\n\tconst onClickMarketCard = (tokenId) => {\n\t\tKlipAPI.buyCard(tokenId, setQrvalue, (result) =>{\n\t\t\talert(JSON.stringify(result));\n\t\t});\n\t}\n\t// onClickMyCard\n\t// onClickMarketCard\n\t\n\t// getUserData\n\tconst getUserData = () => {\n\t\tKlipAPI.getAddress(setQrvalue, async (address) => {\n\t\t\tsetMyAddress(address);\n\t\t\tconst _balance = await getBalance(address);\n\t\t\tsetMyBalance(_balance);\n\t\t});\n\t};\n  return (\n    <div className=\"App\">\n\t\t<div style={{backgroundColor: \"black\", padding: 10}}>\n\t\t\t{/* 주소 잔고 */}\n\t\t\t<div style={{fontSize:30, fontWeight: \"bold\", paddingLeft:5, marginTop:10}}>내 지갑</div>\n\t\t\t{myAddress}\n\t\t\t<br/>\n\t\t\t<Alert \n\t\t\t\tonClick={getUserData}\n\t\t\t\tvariant={\"balance\"} style={{backgroundColor:\"skyblue\", fontSize: 25 }}>{myBalance}</Alert>\n\t\t\t\n\t\t\t<Container style={{backgroundColor:'white', width:300, height:300, padding:20}}>\n\t\t\t\t<QRCode value={qrvalue} size={256} style={{ margin: \"auto\"}}/>\t\n\t\t\t</Container>\n\t\t\t<br/><br/>\n\t\t\t{/* 갤러리(마켓, 내 지갑) */}\n\t\t\t{tab === \"MARKET\" || tab === \"WALLET\" ? (\n\t\t\t\t<div className=\"container\" style={{padding:0, width:\"100%\"}}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t{nfts.map((nft, index) => (\n\t\t\t\t\t\t\t<Card.Img \n\t\t\t\t\t\t\t\tkey={`imagekey${index}`}\n\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\tonClickCard(nft.id)\n\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\tclassName=\"img-responsive\" \n\t\t\t\t\t\t\t\tsrc={nfts[index].uri} \n\t\t\t\t\t\t\t\theight={\"15%\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Card>\n\n\t\t\t\t</div>\t\n\t\t\t) : null}\n\t\t\t{/* 발행페이지 */}\n\t\t\t{tab === \"MINT\" ? \n\t\t\t\t<div className=\"container\" style={{padding:0, width:\"100%\"}}>\n\t\t\t\t\t<Card className=\"text-center\" style={{color:\"black\", height:\"50%\", borderColor:\"#C5B358\"}}>\n\t\t\t\t\t\t<Card.Body style={{oppacity: 0.9, backgroundColor:\"black\"}}>\n\t\t\t\t\t\t\t{mintImageUrl !== \"\" ? (\n\t\t\t\t\t\t\t\t<Card.Img  src={mintImageUrl} height={\"30%\"} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\tvalue={mintImageUrl}\n\t\t\t\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\t\t\t\tconsole.log(e.target.value);\n\t\t\t\t\t\t\t\t\t\tsetMintImageUrl(e.target.value);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"이미지 주소를 입력해주세요\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tonClickMint(mintImageUrl);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvariant=\"primary\" style={{backgroundColor:\"cadetblue\", borderColor:\"cadetblue\"}}>발행하기</Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t </div>\n\t\t\t\t: null}\n\t  \t</div>\n\t  \t<button onClick={fetchMyNFTs}>\n\t  \t\tNFT 가져오기\n\t\t  </button>\n\t\t\n\t\t{/* 모달 */}\t\n\t  \t{/* 탭 */}\n\t\t<nav style={{backgroundColor: \"#1b1717\", height: 45}}\n\t\t\tclassName=\"navbar fixed-bottom navbar-light\" \n\t\t\trole=\"navigation\">\n\t  \t\t<Nav className=\"w-100\">\n\t\t\t\t<div className=\"d-flex flex-row justify-content-around w-100\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\tsetTab(\"MARKET\");\n\t\t\t\t\t\t\tfetchMarketNFTs();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName = \"row d-flex flex-column justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div>MARKET</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={()=>{\n\t\t\t\t\t\t\tsetTab(\"MINT\");\n\t\t\t\t\t\t\tfetchMarketNFTs();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName = \"row d-flex flex-column justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div>MINT</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={()=>{\n\t\t\t\t\t\t\tsetTab(\"WALLET\");\n\t\t\t\t\t\t\tfetchMarketNFTs();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName = \"row d-flex flex-column justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div>WALLET</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Nav>\n\t\t  </nav>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}