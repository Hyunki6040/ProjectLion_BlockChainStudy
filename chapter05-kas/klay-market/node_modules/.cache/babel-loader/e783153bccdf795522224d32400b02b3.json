{"ast":null,"code":"import axios from \"axios\";\nimport { COUNT_CONTRACT_ADDRESS } from \"../constants/index\";\nconst A2P_API_PREPAR_URL = \"https://a2a-api.klipwallet.com/v2/a2a/prepare\";\nconst APP_NAME = \"KLAY_MARKET\";\nexport const setCount = (count, setQrvalue) => {\n  axios.post(A2P_API_PREPAR_URL, {\n    bapp: {\n      name: APP_NAME\n    },\n    type: \"execute_contract\",\n    transaction: {\n      to: COUNT_CONTRACT_ADDRESS,\n      abi: '{ \"constant\": false, \"inputs\": [ { \"name\": \"_count\", \"type\": \"uint256\" } ], \"name\": \"setCount\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }',\n      value: \"0\",\n      params: `[\"${count}\"]`\n    }\n  }).then(response => {\n    const {\n      request_key\n    } = response.data;\n    const qrcode = `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n    setQrvalue(qrcode);\n    let timerId = setInterval(() => {\n      axios.get(`https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`).then(res => {\n        if (res.data.result) {\n          console.log(`[Result] (${JSON.stringify(res.data.result)}`);\n\n          if (res.data.result.status === 'sccess') {\n            clearInterval(timerId);\n          }\n        }\n      });\n    }, 1000);\n  });\n};\nexport const getAddress = (setQrvalue, callback) => {\n  axios.post(A2P_API_PREPAR_URL, {\n    bapp: {\n      name: APP_NAME\n    },\n    type: \"auth\"\n  }).then(response => {\n    const {\n      request_key\n    } = response.data;\n    const qrcode = `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n    setQrvalue(qrcode);\n    let timerId = setInterval(() => {\n      axios.get(`https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`).then(res => {\n        if (res.data.result) {\n          console.log(`[Result] (${JSON.stringify(res.data.result)}`);\n          clearInterval(timerId);\n        }\n      });\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/api/UseKlip.js"],"names":["axios","COUNT_CONTRACT_ADDRESS","A2P_API_PREPAR_URL","APP_NAME","setCount","count","setQrvalue","post","bapp","name","type","transaction","to","abi","value","params","then","response","request_key","data","qrcode","timerId","setInterval","get","res","result","console","log","JSON","stringify","status","clearInterval","getAddress","callback"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,sBAAT,QAAuC,oBAAvC;AAEA,MAAMC,kBAAkB,GAAG,+CAA3B;AACA,MAAMC,QAAQ,GAAG,aAAjB;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAC9CN,EAAAA,KAAK,CAACO,IAAN,CACCL,kBADD,EACoB;AAClBM,IAAAA,IAAI,EAAE;AACLC,MAAAA,IAAI,EAAEN;AADD,KADY;AAIlBO,IAAAA,IAAI,EAAE,kBAJY;AAKlBC,IAAAA,WAAW,EAAE;AACZC,MAAAA,EAAE,EAAEX,sBADQ;AAEZY,MAAAA,GAAG,EAAE,wLAFO;AAGZC,MAAAA,KAAK,EAAE,GAHK;AAIZC,MAAAA,MAAM,EAAG,KAAIV,KAAM;AAJP;AALK,GADpB,EAaEW,IAbF,CAaQC,QAAD,IAAc;AACpB,UAAM;AAACC,MAAAA;AAAD,QAAgBD,QAAQ,CAACE,IAA/B;AACA,UAAMC,MAAM,GAAI,mDAAkDF,WAAY,EAA9E;AACAZ,IAAAA,UAAU,CAACc,MAAD,CAAV;AAEA,QAAIC,OAAO,GAAGC,WAAW,CAAC,MAAM;AAC/BtB,MAAAA,KAAK,CAACuB,GAAN,CAAW,4DAA2DL,WAAY,EAAlF,EAAqFF,IAArF,CAA2FQ,GAAD,IAAS;AAClG,YAAIA,GAAG,CAACL,IAAJ,CAASM,MAAb,EAAqB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAa,aAAYC,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACL,IAAJ,CAASM,MAAxB,CAAgC,EAAzD;;AACA,cAAGD,GAAG,CAACL,IAAJ,CAASM,MAAT,CAAgBK,MAAhB,KAA2B,QAA9B,EAAuC;AACtCC,YAAAA,aAAa,CAACV,OAAD,CAAb;AACA;AACD;AACD,OAPD;AAQA,KATwB,EAStB,IATsB,CAAzB;AAUA,GA5BD;AA6BA,CA9BM;AAgCP,OAAO,MAAMW,UAAU,GAAG,CAAC1B,UAAD,EAAa2B,QAAb,KAA0B;AACnDjC,EAAAA,KAAK,CAACO,IAAN,CACCL,kBADD,EACoB;AAClBM,IAAAA,IAAI,EAAE;AACLC,MAAAA,IAAI,EAAEN;AADD,KADY;AAIlBO,IAAAA,IAAI,EAAE;AAJY,GADpB,EAOEM,IAPF,CAOQC,QAAD,IAAc;AACpB,UAAM;AAACC,MAAAA;AAAD,QAAgBD,QAAQ,CAACE,IAA/B;AACA,UAAMC,MAAM,GAAI,mDAAkDF,WAAY,EAA9E;AACAZ,IAAAA,UAAU,CAACc,MAAD,CAAV;AAEA,QAAIC,OAAO,GAAGC,WAAW,CAAC,MAAM;AAC/BtB,MAAAA,KAAK,CAACuB,GAAN,CAAW,4DAA2DL,WAAY,EAAlF,EAAqFF,IAArF,CAA2FQ,GAAD,IAAS;AAClG,YAAIA,GAAG,CAACL,IAAJ,CAASM,MAAb,EAAqB;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAa,aAAYC,IAAI,CAACC,SAAL,CAAeL,GAAG,CAACL,IAAJ,CAASM,MAAxB,CAAgC,EAAzD;AACAM,UAAAA,aAAa,CAACV,OAAD,CAAb;AACA;AACD,OALD;AAMA,KAPwB,EAOtB,IAPsB,CAAzB;AAQA,GApBD;AAqBA,CAtBM","sourcesContent":["import axios from \"axios\";\nimport { COUNT_CONTRACT_ADDRESS } from \"../constants/index\";\n\nconst A2P_API_PREPAR_URL = \"https://a2a-api.klipwallet.com/v2/a2a/prepare\";\nconst APP_NAME = \"KLAY_MARKET\";\nexport const setCount = (count, setQrvalue) => {\n\taxios.post(\n\t\tA2P_API_PREPAR_URL,{\n\t\t\tbapp: {\n\t\t\t\tname: APP_NAME\n\t\t\t},\n\t\t\ttype: \"execute_contract\",\n\t\t\ttransaction: {\n\t\t\t\tto: COUNT_CONTRACT_ADDRESS,\n\t\t\t\tabi: '{ \"constant\": false, \"inputs\": [ { \"name\": \"_count\", \"type\": \"uint256\" } ], \"name\": \"setCount\", \"outputs\": [], \"payable\": false, \"stateMutability\": \"nonpayable\", \"type\": \"function\" }',\n\t\t\t\tvalue: \"0\",\n\t\t\t\tparams: `[\"${count}\"]`\n\t\t\t}\n\t\t}\n\t).then((response) => {\n\t\tconst {request_key} = response.data;\n\t\tconst qrcode = `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n\t\tsetQrvalue(qrcode);\n\t\t\n\t\tlet timerId = setInterval(() => {\n\t\t\taxios.get(`https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`).then((res) => {\n\t\t\t\tif (res.data.result) {\n\t\t\t\t\tconsole.log(`[Result] (${JSON.stringify(res.data.result)}`);\n\t\t\t\t\tif(res.data.result.status === 'sccess'){\n\t\t\t\t\t\tclearInterval(timerId);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1000)\n\t})\n}\n\nexport const getAddress = (setQrvalue, callback) => {\n\taxios.post(\n\t\tA2P_API_PREPAR_URL,{\n\t\t\tbapp: {\n\t\t\t\tname: APP_NAME\n\t\t\t},\n\t\t\ttype: \"auth\"\n\t\t}\n\t).then((response) => {\n\t\tconst {request_key} = response.data;\n\t\tconst qrcode = `https://klipwallet.com/?target=/a2a?request_key=${request_key}`;\n\t\tsetQrvalue(qrcode);\n\t\t\n\t\tlet timerId = setInterval(() => {\n\t\t\taxios.get(`https://a2a-api.klipwallet.com/v2/a2a/result?request_key=${request_key}`).then((res) => {\n\t\t\t\tif (res.data.result) {\n\t\t\t\t\tconsole.log(`[Result] (${JSON.stringify(res.data.result)}`);\n\t\t\t\t\tclearInterval(timerId);\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1000)\n\t})\n}"]},"metadata":{},"sourceType":"module"}