{"ast":null,"code":"var _jsxFileName = \"/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faWallet, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { getBalance, fetchCardsOf } from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport * as KasAPI from \"./api/UseKAS\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\";\nimport { Alert, Container, Card, Nav, Button, Form, Modal, Row, Col } from \"react-bootstrap\";\nimport { MARKET_CONTRACT_ADDRESS } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\n\nfunction App() {\n  _s();\n\n  // nft\n  const [nfts, setNfts] = useState([]); // {tokenId: '101', tokenUri: \"\"}\n\n  const [myBalance, setMyBalance] = useState(\"0\");\n  const [myAddress, setMyAddress] = useState(DEFAULT_ADDRESS); // UI\n\n  const [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE);\n  const [tab, setTab] = useState(\"MARKET\"); // MARKET, MINT, WALLET\n\n  const [mintImageUrl, setMintImageUrl] = useState(\"\");\n  const [mintTokenID, setMintTokenID] = useState(\"\"); // Modal\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalProps, setModalProps] = useState({\n    title: \"MODAL\",\n    onConfirm: () => {}\n  });\n  const rows = nfts.slice(nfts.length / 2); //fetchMarketNFT\n\n  const fetchMarketNFTs = async () => {\n    const _nfts = await fetchCardsOf(MARKET_CONTRACT_ADDRESS);\n\n    setNfts(_nfts);\n  }; //fetchMyNFTs\n\n\n  const fetchMyNFTs = async () => {\n    if (myAddress === DEFAULT_ADDRESS) {\n      alert(\"NO ADDRESS\");\n      return;\n    }\n\n    const _nfts = await fetchCardsOf(myAddress);\n\n    setNfts(_nfts); // [{id:100, uri: \"https://~~.png}, {id:100, uri: \"https://~~.jpg}]\n    // balanceOf -> 내가 가진 전체 NFT 토큰 개수를 가져온다\n    // tokenOfOwnerByIndex -> 내가 가진 NFT token Id를 하나씩 가져온다 -> 배열로\n    // 주소, 0 -> 100\n    // 주소, 1 -> 101\n    // tokenURI -> 앞에서 가져온 tokenId를 이요해서 tokenURI를 하나씩 가져온다.\n    // 100 -> ~~.png\n    // 101 -> ~~.jpg\n  }; // onClickMint\n\n\n  const onClickMint = async (uri, tokenID) => {\n    if (myAddress === DEFAULT_ADDRESS) {\n      alert(\"NO ADDRESS\");\n      return;\n    } // (option) asset upload api 이용\n    // metadata upload\n\n\n    const metadataURL = await KasAPI.uploadMetaData(uri);\n\n    if (!metadataURL) {\n      alert('메타 데이터 업로드에 실패하였습니다.');\n      return;\n    }\n\n    KlipAPI.mintCardWithURI(myAddress, tokenID, uri, setQrvalue, result => {\n      alert(JSON.stringify(result));\n    });\n  };\n\n  const onClickCard = id => {\n    if (tab === 'WALLET') {\n      setModalProps({\n        title: \"NTF를 마켓에 올리시겠습니까?\",\n        onConfirm: () => {\n          onClickMyCard(id);\n        }\n      });\n      setShowModal(true);\n    }\n\n    if (tab === 'MARKET') {\n      setModalProps({\n        title: \"NTF를 구매하겠습니까?\",\n        onConfirm: () => {\n          onClickMarketCard(id);\n        }\n      });\n      setShowModal(true);\n    }\n  };\n\n  const onClickMyCard = tokenId => {\n    KlipAPI.listingCard(myAddress, tokenId, setQrvalue, result => {\n      alert(JSON.stringify(result));\n    });\n  };\n\n  const onClickMarketCard = tokenId => {\n    KlipAPI.buyCard(tokenId, setQrvalue, result => {\n      alert(JSON.stringify(result));\n    });\n  }; // onClickMyCard\n  // onClickMarketCard\n  // getUserData\n\n\n  const getUserData = () => {\n    setModalProps({\n      title: \"Klip 지갑을 연결하시겠습니까?\",\n      onConfirm: () => {\n        KlipAPI.getAddress(setQrvalue, async address => {\n          setMyAddress(address);\n\n          const _balance = await getBalance(address);\n\n          setMyBalance(_balance);\n        });\n      }\n    });\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    getUserData();\n    fetchMarketNFTs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 30,\n          fontWeight: \"bold\",\n          paddingLeft: 5,\n          marginTop: 10\n        },\n        children: \"\\uB0B4 \\uC9C0\\uAC11\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 4\n      }, this), myAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        onClick: getUserData,\n        variant: \"balance\",\n        style: {\n          backgroundColor: \"skyblue\",\n          fontSize: 25\n        },\n        children: myAddress !== DEFAULT_ADDRESS ? `${myBalance} KLAY` : \"지갑 연동하기\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 4\n      }, this), qrvalue !== 'DEFAULT' ? /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          backgroundColor: 'white',\n          width: 300,\n          height: 300,\n          padding: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(QRCode, {\n          value: qrvalue,\n          size: 256,\n          style: {\n            margin: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 4\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), tab === \"MARKET\" || tab === \"WALLET\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: 0,\n          width: \"100%\"\n        },\n        children: rows.map((o, rowIndex) => /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              marginRight: 0,\n              paddingRight: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              onClick: () => {\n                onClickCard(nfts[rowIndex * 2].id);\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: nfts[rowIndex * 2].uri\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 9\n            }, this), \"[\", nfts[rowIndex * 2].id, \"]NFT\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              marginRight: 0,\n              paddingRight: 0\n            },\n            children: [nfts.length > rowIndex * 2 + 1 ? /*#__PURE__*/_jsxDEV(Card, {\n              onClick: () => {\n                onClickCard(nfts[rowIndex * 2 + 1].id);\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                src: nfts[rowIndex * 2 + 1].uri\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 11\n            }, this) : null, nfts.length > rowIndex * 2 + 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"[\", nfts[rowIndex * 2 + 1].id, \"]NFT\"]\n            }, void 0, true) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this) : null, tab === \"MINT\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: 0,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center\",\n          style: {\n            color: \"black\",\n            height: \"50%\",\n            borderColor: \"#C5B358\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              oppacity: 0.9,\n              backgroundColor: \"black\"\n            },\n            children: [mintImageUrl !== \"\" ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: mintImageUrl,\n              height: \"30%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 9\n            }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  value: mintImageUrl,\n                  onChange: e => {\n                    console.log(e.target.value);\n                    setMintImageUrl(e.target.value);\n                  },\n                  type: \"text\",\n                  placeholder: \"\\uC774\\uBBF8\\uC9C0 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  value: mintTokenID,\n                  onChange: e => {\n                    console.log(e.target.value);\n                    setMintTokenID(e.target.value);\n                  },\n                  type: \"text\",\n                  placeholder: \"\\uD1A0\\uD070 ID\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  onClickMint(mintImageUrl, mintTokenID);\n                },\n                variant: \"primary\",\n                style: {\n                  backgroundColor: \"cadetblue\",\n                  borderColor: \"cadetblue\"\n                },\n                children: \"\\uBC1C\\uD589\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 5\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      centered: true,\n      size: \"sm\",\n      show: showModal,\n      onHide: () => {\n        setShowModal(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        style: {\n          border: 0,\n          backgroundColor: \"black\",\n          opacity: 0.8\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalProps.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        style: {\n          border: 0,\n          backgroundColor: \"black\",\n          opacity: 0.8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            modalProps.onConfirm();\n            setShowModal(false);\n          },\n          style: {\n            backgroundColor: \"cadetblue\",\n            borderColor: \"cadetblue\"\n          },\n          children: \"\\uC9C4\\uD589\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondray\",\n          onClick: () => {\n            setShowModal(false);\n          },\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      style: {\n        backgroundColor: \"#1b1717\",\n        height: 45\n      },\n      className: \"navbar fixed-bottom navbar-light\",\n      role: \"navigation\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row justify-content-around w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTab(\"MARKET\");\n              fetchMarketNFTs();\n            },\n            className: \"row d-flex flex-column justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                color: \"white\",\n                size: \"lg\",\n                icon: faHome\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTab(\"MINT\");\n            },\n            className: \"row d-flex flex-column justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                color: \"white\",\n                size: \"lg\",\n                icon: faPlus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTab(\"WALLET\");\n              fetchMyNFTs();\n            },\n            className: \"row d-flex flex-column justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                color: \"white\",\n                size: \"lg\",\n                icon: faWallet\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 12\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7vQE89VieGRx8UjFwKD8QtdFloQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/App.js"],"names":["React","useState","useEffect","QRCode","FontAwesomeIcon","faHome","faWallet","faPlus","getBalance","fetchCardsOf","KlipAPI","KasAPI","Alert","Container","Card","Nav","Button","Form","Modal","Row","Col","MARKET_CONTRACT_ADDRESS","DEFAULT_QR_CODE","DEFAULT_ADDRESS","App","nfts","setNfts","myBalance","setMyBalance","myAddress","setMyAddress","qrvalue","setQrvalue","tab","setTab","mintImageUrl","setMintImageUrl","mintTokenID","setMintTokenID","showModal","setShowModal","modalProps","setModalProps","title","onConfirm","rows","slice","length","fetchMarketNFTs","_nfts","fetchMyNFTs","alert","onClickMint","uri","tokenID","metadataURL","uploadMetaData","mintCardWithURI","result","JSON","stringify","onClickCard","id","onClickMyCard","onClickMarketCard","tokenId","listingCard","buyCard","getUserData","getAddress","address","_balance","backgroundColor","padding","fontSize","fontWeight","paddingLeft","marginTop","width","height","margin","map","o","rowIndex","marginRight","paddingRight","color","borderColor","oppacity","e","console","log","target","value","border","opacity"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faWallet, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport {getBalance, fetchCardsOf} from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport * as KasAPI from \"./api/UseKAS\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\"\nimport { Alert, Container, Card, Nav, Button, Form, Modal, Row, Col} from \"react-bootstrap\";\nimport { MARKET_CONTRACT_ADDRESS } from \"./constants\";\n\n\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\nfunction App() {\n\t// nft\n\tconst [nfts, setNfts] = useState([]); // {tokenId: '101', tokenUri: \"\"}\n\tconst [myBalance, setMyBalance] = useState(\"0\");\n\tconst [myAddress, setMyAddress] = useState(DEFAULT_ADDRESS);\n\t\n\t// UI\n\tconst [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE);\n\tconst [tab, setTab] = useState(\"MARKET\"); // MARKET, MINT, WALLET\n\tconst [mintImageUrl, setMintImageUrl] = useState(\"\");\n\tconst [mintTokenID, setMintTokenID] = useState(\"\");\n\t\n\t// Modal\n\tconst [showModal, setShowModal] = useState(false);\n\tconst [modalProps, setModalProps] = useState({\n\t\ttitle: \"MODAL\",\n\t\tonConfirm: () => {},\n\t\t\n\t});\n\tconst rows = nfts.slice(nfts.length / 2);\n\t//fetchMarketNFT\n\tconst fetchMarketNFTs = async () => {\n\t\tconst _nfts = await fetchCardsOf(MARKET_CONTRACT_ADDRESS);\n\t\tsetNfts(_nfts);\n\t}\n\t//fetchMyNFTs\n\tconst fetchMyNFTs = async () => {\n\t\tif(myAddress === DEFAULT_ADDRESS){\n\t\t\talert(\"NO ADDRESS\");\n\t\t\treturn;\n\t\t}\n\t\tconst _nfts = await fetchCardsOf(myAddress);\n\t\t\n\t\tsetNfts(_nfts);\n\t\t// [{id:100, uri: \"https://~~.png}, {id:100, uri: \"https://~~.jpg}]\n\t\t// balanceOf -> 내가 가진 전체 NFT 토큰 개수를 가져온다\n\t\t// tokenOfOwnerByIndex -> 내가 가진 NFT token Id를 하나씩 가져온다 -> 배열로\n\t\t// 주소, 0 -> 100\n\t\t// 주소, 1 -> 101\n\t\t// tokenURI -> 앞에서 가져온 tokenId를 이요해서 tokenURI를 하나씩 가져온다.\n\t\t// 100 -> ~~.png\n\t\t// 101 -> ~~.jpg\n\t}\n\t// onClickMint\n\tconst onClickMint = async (uri, tokenID) => {\n\t\tif(myAddress === DEFAULT_ADDRESS){\n\t\t\talert(\"NO ADDRESS\");\n\t\t\treturn;\n\t\t}\n\t\t// (option) asset upload api 이용\n\t\t// metadata upload\n\t\tconst metadataURL = await KasAPI.uploadMetaData(uri);\n\t\tif(!metadataURL){\n\t\t\talert('메타 데이터 업로드에 실패하였습니다.');\n\t\t\treturn;\n\t\t}\n\t\tKlipAPI.mintCardWithURI(\n\t\t\tmyAddress, tokenID, uri, setQrvalue, (result) => {\n\t\t\t\talert(JSON.stringify(result));\n\t\t})\n\t}\n\tconst onClickCard = (id) => {\n\t\t\n\t\tif (tab === 'WALLET'){\n\t\t\tsetModalProps({\n\t\t\t\ttitle: \"NTF를 마켓에 올리시겠습니까?\",\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tonClickMyCard(id);\t\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetShowModal(true);\n\t\t\t\n\t\t}\n\t\tif (tab === 'MARKET'){\n\t\t\tsetModalProps({\n\t\t\t\ttitle: \"NTF를 구매하겠습니까?\",\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tonClickMarketCard(id);\t\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetShowModal(true);\n\t\t\t\n\t\t}\n\t}\n\tconst onClickMyCard = (tokenId) => {\n\t\tKlipAPI.listingCard(myAddress, tokenId, setQrvalue, (result) =>{\n\t\t\talert(JSON.stringify(result));\n\t\t});\n\t}\n\tconst onClickMarketCard = (tokenId) => {\n\t\tKlipAPI.buyCard(tokenId, setQrvalue, (result) =>{\n\t\t\talert(JSON.stringify(result));\n\t\t});\n\t}\n\t// onClickMyCard\n\t// onClickMarketCard\n\t\n\t// getUserData\n\tconst getUserData = () => {\n\t\tsetModalProps({\n\t\t\ttitle: \"Klip 지갑을 연결하시겠습니까?\",\n\t\t\tonConfirm: () => {\n\t\t\t\tKlipAPI.getAddress(setQrvalue, async (address) => {\n\t\t\t\t\tsetMyAddress(address);\n\t\t\t\t\tconst _balance = await getBalance(address);\n\t\t\t\t\tsetMyBalance(_balance);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tsetShowModal(true);\n\t};\n\t\n\tuseEffect(() => {\n\t\tgetUserData();\n\t\tfetchMarketNFTs();\n   \t}, [])\n  return (\n    <div className=\"App\">\n\t\t<div style={{backgroundColor: \"black\", padding: 10}}>\n\t\t\t{/* 주소 잔고 */}\n\t\t\t<div style={{fontSize:30, fontWeight: \"bold\", paddingLeft:5, marginTop:10}}>내 지갑</div>\n\t\t\t{myAddress}\n\t\t\t<br/>\n\t\t\t<Alert \n\t\t\t\tonClick={getUserData}\n\t\t\t\tvariant={\"balance\"} style={{backgroundColor:\"skyblue\", fontSize: 25 }}>\n\t\t\t\t{myAddress !== DEFAULT_ADDRESS ? `${myBalance} KLAY` : \"지갑 연동하기\"}\n\t\t\t\t\n\t\t\t</Alert>\n\t\t\t{qrvalue !== 'DEFAULT' ? (\n\t\t\t<Container style={{backgroundColor:'white', width:300, height:300, padding:20}}>\n\t\t\t\t<QRCode value={qrvalue} size={256} style={{ margin: \"auto\"}}/>\n\t\t\t</Container>\n\t\t\t): null}\n\t\t\t<br/><br/>\n\t\t\t{/* 갤러리(마켓, 내 지갑) */}\n\t\t\t{tab === \"MARKET\" || tab === \"WALLET\" ? (\n\t\t\t\t<div className=\"container\" style={{padding:0, width:\"100%\"}}>\n\t\t\t\t\t{rows.map((o, rowIndex) => (\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col style={{marginRight: 0, paddingRight:0}}>\n\t\t\t\t\t\t\t\t<Card onClick={() => {\n\t\t\t\t\t\t\t\t\t\tonClickCard(nfts[rowIndex * 2].id);\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Card.Img src={nfts[rowIndex * 2].uri} />\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t[{nfts[rowIndex * 2].id}]NFT\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col style={{marginRight: 0, paddingRight:0}}>\n\t\t\t\t\t\t\t\t{nfts.length > rowIndex * 2 + 1 ? (\n\t\t\t\t\t\t\t\t\t\t<Card onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tonClickCard(nfts[rowIndex * 2 + 1].id);\n\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t<Card.Img src={nfts[rowIndex * 2 + 1].uri} />\n\t\t\t\t\t\t\t\t\t\t</Card>\t\n\t\t\t\t\t\t\t\t\t): null}\n\t\t\t\t\t\t\t\t{nfts.length > rowIndex * 2 + 1 ? (<>[{nfts[rowIndex * 2 + 1].id}]NFT</>) : null}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t))}\n\n\t\t\t\t</div>\t\n\t\t\t) : null}\n\t\t\t{/* 발행페이지 */}\n\t\t\t{tab === \"MINT\" ? \n\t\t\t\t<div className=\"container\" style={{padding:0, width:\"100%\"}}>\n\t\t\t\t\t<Card className=\"text-center\" style={{color:\"black\", height:\"50%\", borderColor:\"#C5B358\"}}>\n\t\t\t\t\t\t<Card.Body style={{oppacity: 0.9, backgroundColor:\"black\"}}>\n\t\t\t\t\t\t\t{mintImageUrl !== \"\" ? (\n\t\t\t\t\t\t\t\t<Card.Img  src={mintImageUrl} height={\"30%\"} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\tvalue={mintImageUrl}\n\t\t\t\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\t\t\t\tconsole.log(e.target.value);\n\t\t\t\t\t\t\t\t\t\tsetMintImageUrl(e.target.value);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"이미지 주소를 입력해주세요\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\tvalue={mintTokenID}\n\t\t\t\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\t\t\t\tconsole.log(e.target.value);\n\t\t\t\t\t\t\t\t\t\tsetMintTokenID(e.target.value);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"토큰 ID를 입력해주세요\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tonClickMint(mintImageUrl, mintTokenID);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvariant=\"primary\" style={{backgroundColor:\"cadetblue\", borderColor:\"cadetblue\"}}>발행하기</Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t </div>\n\t\t\t\t: null}\n\t  \t</div>\n\t\t<br/><br/><br/><br/><br/><br/><br/>\n\t\t{/* 모달 */}\t\n\t\t<Modal\n\t\tcentered\n\t\tsize=\"sm\"\n\t\tshow={showModal}\n\t\tonHide={() => {\n\t\t\tsetShowModal(false);\t  \n  \t\t}}>\n\t\t\t<Modal.Header style={{border:0, backgroundColor: \"black\", opacity: 0.8}}>\n\t\t\t<Modal.Title>{modalProps.title}</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Footer style={{border: 0, backgroundColor:\"black\", opacity: 0.8}}>\n\t\t\t\t<Button variant=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tmodalProps.onConfirm();\n\t\t\t\t\t\tsetShowModal(false);\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ backgroundColor: \"cadetblue\", borderColor: \"cadetblue\"}}\n\t\t\t\t>진행</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"secondray\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetShowModal(false);\n\t\t\t\t\t}}\n\t\t\t\t\t>닫기</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t  \t{/* 탭 */}\n\t\t<nav style={{backgroundColor: \"#1b1717\", height: 45}}\n\t\t\tclassName=\"navbar fixed-bottom navbar-light\" \n\t\t\trole=\"navigation\">\n\t  \t\t<Nav className=\"w-100\">\n\t\t\t\t<div className=\"d-flex flex-row justify-content-around w-100\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\tsetTab(\"MARKET\");\n\t\t\t\t\t\t\tfetchMarketNFTs();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName = \"row d-flex flex-column justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div><FontAwesomeIcon color=\"white\" size=\"lg\" icon={faHome}/></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={()=>{\n\t\t\t\t\t\t\tsetTab(\"MINT\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName = \"row d-flex flex-column justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div><FontAwesomeIcon color=\"white\" size=\"lg\" icon={faPlus}/></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={()=>{\n\t\t\t\t\t\t\tsetTab(\"WALLET\");\n\t\t\t\t\t\t\tfetchMyNFTs();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName = \"row d-flex flex-column justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div><FontAwesomeIcon color=\"white\" size=\"lg\" icon={faWallet}/></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Nav>\n\t\t  </nav>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}