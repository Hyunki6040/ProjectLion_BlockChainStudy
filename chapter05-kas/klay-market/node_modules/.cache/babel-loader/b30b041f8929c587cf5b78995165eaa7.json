{"ast":null,"code":"var _jsxFileName = \"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { getBalance } from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\";\nimport { Alert, Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\n\nfunction App() {\n  _s();\n\n  // State Data\n  // Global Data(Domain Data)\n  // address\n  // nft\n  const [nfts, setNfts] = useState([]);\n  const [myBalance, setMyBalance] = useState(\"0\");\n  const [myAddress, setMyAddress] = useState(DEFAULT_ADDRESS); // UI\n\n  const [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE); // tab\n  //mintInput\n  // Modal\n  //fetchMarketNFT\n  //fetchMyNFTs\n  // onClickMint\n  // onClickMyCard\n  // onClickMarketCard\n  // getUserData\n\n  const getUserData = () => {\n    KlipAPI.getAddress(setQrvalue, async address => {\n      setMyAddress(address);\n\n      const _balance = await getBalance(address);\n\n      setMyBalance(_balance);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 30,\n          fontWeight: \"bold\",\n          paddingLeft: 5,\n          marginTop: 10\n        },\n        children: \"\\uB0B4 \\uC9C0\\uAC11\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }, this), myAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        onClick: getUserData,\n        variant: \"balance\",\n        style: {\n          backgroundColor: \"skyblue\",\n          fontSize: 25\n        },\n        children: myBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        backgroundColor: 'white',\n        width: 300,\n        height: 300,\n        padding: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(QRCode, {\n        value: qrvalue,\n        size: 256,\n        style: {\n          margin: \"auto\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"n8ePqWTeFm3NyF3rX4jrS/i3xGA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js"],"names":["React","useState","QRCode","getBalance","KlipAPI","Alert","Container","DEFAULT_QR_CODE","DEFAULT_ADDRESS","App","nfts","setNfts","myBalance","setMyBalance","myAddress","setMyAddress","qrvalue","setQrvalue","getUserData","getAddress","address","_balance","backgroundColor","padding","fontSize","fontWeight","paddingLeft","marginTop","width","height","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,OAAO,sCAAP;AACA,OAAO,WAAP;AACA,OAAO,cAAP;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,iBAAjC;;AAGA,MAAMC,eAAe,GAAG,SAAxB;AACA,MAAMC,eAAe,GAAG,8BAAxB;;AACA,SAASC,GAAT,GAAe;AAAA;;AACd;AAEA;AACA;AACA;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,GAAD,CAA1C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAACO,eAAD,CAA1C,CARc,CAUd;;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAACM,eAAD,CAAtC,CAXc,CAYd;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMW,WAAW,GAAG,MAAM;AACzBd,IAAAA,OAAO,CAACe,UAAR,CAAmBF,UAAnB,EAA+B,MAAOG,OAAP,IAAmB;AACjDL,MAAAA,YAAY,CAACK,OAAD,CAAZ;;AACA,YAAMC,QAAQ,GAAG,MAAMlB,UAAU,CAACiB,OAAD,CAAjC;;AACAP,MAAAA,YAAY,CAACQ,QAAD,CAAZ;AACA,KAJD;AAKA,GAND;;AAOC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACF;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAAE,OAAlB;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAZ;AAAA,8BACC;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAC,EAAV;AAAcC,UAAAA,UAAU,EAAE,MAA1B;AAAkCC,UAAAA,WAAW,EAAC,CAA9C;AAAiDC,UAAAA,SAAS,EAAC;AAA3D,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEEb,SAFF,eAGC;AAAA;AAAA;AAAA;AAAA,cAHD,eAIC,QAAC,KAAD;AACC,QAAA,OAAO,EAAEI,WADV;AAEC,QAAA,OAAO,EAAE,SAFV;AAEqB,QAAA,KAAK,EAAE;AAACI,UAAAA,eAAe,EAAC,SAAjB;AAA4BE,UAAAA,QAAQ,EAAE;AAAtC,SAF5B;AAAA,kBAEyEZ;AAFzE;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,eAUA,QAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAACU,QAAAA,eAAe,EAAC,OAAjB;AAA0BM,QAAAA,KAAK,EAAC,GAAhC;AAAqCC,QAAAA,MAAM,EAAC,GAA5C;AAAiDN,QAAAA,OAAO,EAAC;AAAzD,OAAlB;AAAA,6BACD,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEP,OAAf;AAAwB,QAAA,IAAI,EAAE,GAA9B;AAAmC,QAAA,KAAK,EAAE;AAAEc,UAAAA,MAAM,EAAE;AAAV;AAA1C;AAAA;AAAA;AAAA;AAAA;AADC;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GApDQrB,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, {useState} from \"react\";\nimport QRCode from \"qrcode.react\";\nimport {getBalance} from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\"\nimport { Alert, Container } from \"react-bootstrap\";\n\n\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\nfunction App() {\n\t// State Data\n\t\n\t// Global Data(Domain Data)\n\t// address\n\t// nft\n\tconst [nfts, setNfts] = useState([]);\n\tconst [myBalance, setMyBalance] = useState(\"0\");\n\tconst [myAddress, setMyAddress] = useState(DEFAULT_ADDRESS);\n\t\n\t// UI\n\tconst [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE);\n\t// tab\n\t//mintInput\n\t\n\t// Modal\n\t\n\t//fetchMarketNFT\n\t//fetchMyNFTs\n\t// onClickMint\n\t// onClickMyCard\n\t// onClickMarketCard\n\t\n\t// getUserData\n\tconst getUserData = () => {\n\t\tKlipAPI.getAddress(setQrvalue, async (address) => {\n\t\t\tsetMyAddress(address);\n\t\t\tconst _balance = await getBalance(address);\n\t\t\tsetMyBalance(_balance);\n\t\t});\n\t};\n  return (\n    <div className=\"App\">\n\t\t<div style={{backgroundColor: \"black\", padding: 10}}>\n\t\t\t<div style={{fontSize:30, fontWeight: \"bold\", paddingLeft:5, marginTop:10}}>내 지갑</div>\n\t\t\t{myAddress}\n\t\t\t<br/>\n\t\t\t<Alert \n\t\t\t\tonClick={getUserData}\n\t\t\t\tvariant={\"balance\"} style={{backgroundColor:\"skyblue\", fontSize: 25 }}>{myBalance}</Alert>\n\t  \t</div>\n\t\t{/* 주소 잔고 */}\n  \t\t<Container style={{backgroundColor:'white', width:300, height:300, padding:20}}>\n\t\t\t<QRCode value={qrvalue} size={256} style={{ margin: \"auto\"}}/>\t\n\t  \t</Container>\n\t  \t\n\t\t{/* 갤러리(마켓, 내 지갑) */}\n\t\t{/* 발행페이지 */}\n\t\t{/* 탭 */}\n\t\t{/* 모달 */}\t\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}