{"ast":null,"code":"var _jsxFileName = \"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { getBalance, fetchCardsOf } from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\";\nimport { Alert, Container, Card, Nav, Button, Form, Modal, Row, Col } from \"react-bootstrap\";\nimport { MARKET_CONTRACT_ADDRESS } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\n\nfunction App() {\n  _s();\n\n  // nft\n  const [nfts, setNfts] = useState([]); // {tokenId: '101', tokenUri: \"\"}\n\n  const [myBalance, setMyBalance] = useState(\"0\");\n  const [myAddress, setMyAddress] = useState(\"0x7Eb53D88C87F40A95248913ec6F851Ca8441FE0b\"); // UI\n\n  const [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE);\n  const [tab, setTab] = useState(\"MARKET\"); // MARKET, MINT, WALLET\n\n  const [mintImageUrl, setMintImageUrl] = useState(\"\"); // Modal\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalProps, setModalProps] = useState({\n    title: \"MODAL\",\n    onConfirm: () => {}\n  });\n  const rows = nfts.slice(nfts.length / 2); //fetchMarketNFT\n\n  const fetchMarketNFTs = async () => {\n    const _nfts = await fetchCardsOf(MARKET_CONTRACT_ADDRESS);\n\n    setNfts(_nfts);\n  }; //fetchMyNFTs\n\n\n  const fetchMyNFTs = async () => {\n    if (myAddress === DEFAULT_ADDRESS) {\n      alert(\"NO ADDRESS\");\n      return;\n    }\n\n    const _nfts = await fetchCardsOf(myAddress);\n\n    setNfts(_nfts); // [{id:100, uri: \"https://~~.png}, {id:100, uri: \"https://~~.jpg}]\n    // balanceOf -> 내가 가진 전체 NFT 토큰 개수를 가져온다\n    // tokenOfOwnerByIndex -> 내가 가진 NFT token Id를 하나씩 가져온다 -> 배열로\n    // 주소, 0 -> 100\n    // 주소, 1 -> 101\n    // tokenURI -> 앞에서 가져온 tokenId를 이요해서 tokenURI를 하나씩 가져온다.\n    // 100 -> ~~.png\n    // 101 -> ~~.jpg\n  }; // onClickMint\n\n\n  const onClickMint = async uri => {\n    if (myAddress === DEFAULT_ADDRESS) {\n      alert(\"NO ADDRESS\");\n      return;\n    }\n\n    const randomTokenId = parseInt(Math.random() * 100000000);\n    KlipAPI.mintCardWithURI(myAddress, randomTokenId, uri, setQrvalue, result => {\n      alert(JSON.stringify(result));\n    });\n  };\n\n  const onClickCard = id => {\n    if (tab === 'WALLET') {\n      setModalProps({\n        title: \"NTF를 마켓에 올리시겠습니까?\",\n        onConfirm: () => {\n          onClickMyCard(id);\n        }\n      });\n      setShowModal(true);\n    }\n\n    if (tab === 'MARKET') {\n      setModalProps({\n        title: \"NTF를 구매하겠습니까?\",\n        onConfirm: () => {\n          onClickMarketCard(id);\n        }\n      });\n      setShowModal(true);\n    }\n  };\n\n  const onClickMyCard = tokenId => {\n    KlipAPI.listingCard(myAddress, tokenId, setQrvalue, result => {\n      alert(JSON.stringify(result));\n    });\n  };\n\n  const onClickMarketCard = tokenId => {\n    KlipAPI.buyCard(tokenId, setQrvalue, result => {\n      alert(JSON.stringify(result));\n    });\n  }; // onClickMyCard\n  // onClickMarketCard\n  // getUserData\n\n\n  const getUserData = () => {\n    setModalProps({\n      title: \"Klip 지갑을 연결하시겠습니까?\",\n      onConfirm: () => {\n        KlipAPI.getAddress(setQrvalue, async address => {\n          setMyAddress(address);\n\n          const _balance = await getBalance(address);\n\n          setMyBalance(_balance);\n        });\n      }\n    });\n    setShowModal(true);\n  };\n\n  useEffect(() => {\n    getUserData();\n    fetchMarketNFTs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"black\",\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: 30,\n          fontWeight: \"bold\",\n          paddingLeft: 5,\n          marginTop: 10\n        },\n        children: \"\\uB0B4 \\uC9C0\\uAC11\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 4\n      }, this), myAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        onClick: getUserData,\n        variant: \"balance\",\n        style: {\n          backgroundColor: \"skyblue\",\n          fontSize: 25\n        },\n        children: myBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 4\n      }, this), qrvalue !== 'DEFAULT' ? /*#__PURE__*/_jsxDEV(Container, {\n        style: {\n          backgroundColor: 'white',\n          width: 300,\n          height: 300,\n          padding: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(QRCode, {\n          value: qrvalue,\n          size: 256,\n          style: {\n            margin: \"auto\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 4\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), tab === \"MARKET\" || tab === \"WALLET\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: 0,\n          width: \"100%\"\n        },\n        children: rows.map((o, rowIndex) => {\n          alert(rowIndex);\n\n          /*#__PURE__*/\n          _jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              style: {\n                marginRight: 0,\n                paddingRight: 0\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card, {\n                onClick: () => {\n                  onClickCard(nfts[rowIndex * 2].id);\n                },\n                children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                  src: nfts[rowIndex * 2].uri\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 9\n              }, this), \"[\", nfts[rowIndex * 2].id, \"]NFT\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 5\n      }, this) : null, tab === \"MINT\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        style: {\n          padding: 0,\n          width: \"100%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center\",\n          style: {\n            color: \"black\",\n            height: \"50%\",\n            borderColor: \"#C5B358\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              oppacity: 0.9,\n              backgroundColor: \"black\"\n            },\n            children: [mintImageUrl !== \"\" ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: mintImageUrl,\n              height: \"30%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 9\n            }, this) : null, /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  value: mintImageUrl,\n                  onChange: e => {\n                    console.log(e.target.value);\n                    setMintImageUrl(e.target.value);\n                  },\n                  type: \"text\",\n                  placeholder: \"\\uC774\\uBBF8\\uC9C0 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  onClickMint(mintImageUrl);\n                },\n                variant: \"primary\",\n                style: {\n                  backgroundColor: \"cadetblue\",\n                  borderColor: \"cadetblue\"\n                },\n                children: \"\\uBC1C\\uD589\\uD558\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      centered: true,\n      size: \"sm\",\n      show: showModal,\n      onHide: () => {\n        setShowModal(false);\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        style: {\n          border: 0,\n          backgroundColor: \"black\",\n          opacity: 0.8\n        },\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: modalProps.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        style: {\n          border: 0,\n          backgroundColor: \"black\",\n          opacity: 0.8\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            modalProps.onConfirm();\n            setShowModal(false);\n          },\n          style: {\n            backgroundColor: \"cadetblue\",\n            borderColor: \"cadetblue\"\n          },\n          children: \"\\uC9C4\\uD589\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondray\",\n          onClick: () => {\n            setShowModal(false);\n          },\n          children: \"\\uB2EB\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      style: {\n        backgroundColor: \"#1b1717\",\n        height: 45\n      },\n      className: \"navbar fixed-bottom navbar-light\",\n      role: \"navigation\",\n      children: /*#__PURE__*/_jsxDEV(Nav, {\n        className: \"w-100\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row justify-content-around w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTab(\"MARKET\");\n              fetchMarketNFTs();\n            },\n            className: \"row d-flex flex-column justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"MARKET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTab(\"MINT\");\n            },\n            className: \"row d-flex flex-column justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"MINT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setTab(\"WALLET\");\n              fetchMyNFTs();\n            },\n            className: \"row d-flex flex-column justify-content-center align-items-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"WALLET\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pKPFv2uwbEioAHzMNTJRaDor+Vc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js"],"names":["React","useState","useEffect","QRCode","getBalance","fetchCardsOf","KlipAPI","Alert","Container","Card","Nav","Button","Form","Modal","Row","Col","MARKET_CONTRACT_ADDRESS","DEFAULT_QR_CODE","DEFAULT_ADDRESS","App","nfts","setNfts","myBalance","setMyBalance","myAddress","setMyAddress","qrvalue","setQrvalue","tab","setTab","mintImageUrl","setMintImageUrl","showModal","setShowModal","modalProps","setModalProps","title","onConfirm","rows","slice","length","fetchMarketNFTs","_nfts","fetchMyNFTs","alert","onClickMint","uri","randomTokenId","parseInt","Math","random","mintCardWithURI","result","JSON","stringify","onClickCard","id","onClickMyCard","onClickMarketCard","tokenId","listingCard","buyCard","getUserData","getAddress","address","_balance","backgroundColor","padding","fontSize","fontWeight","paddingLeft","marginTop","width","height","margin","map","o","rowIndex","marginRight","paddingRight","color","borderColor","oppacity","e","console","log","target","value","border","opacity"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport QRCode from \"qrcode.react\";\nimport {getBalance, fetchCardsOf} from './api/UseCaver';\nimport * as KlipAPI from \"./api/UseKlip\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport \"./market.css\"\nimport { Alert, Container, Card, Nav, Button, Form, Modal, Row, Col} from \"react-bootstrap\";\nimport { MARKET_CONTRACT_ADDRESS } from \"./constants\";\n\n\nconst DEFAULT_QR_CODE = 'DEFAULT';\nconst DEFAULT_ADDRESS = \"0x00000000000000000000000000\";\nfunction App() {\n\t// nft\n\tconst [nfts, setNfts] = useState([]); // {tokenId: '101', tokenUri: \"\"}\n\tconst [myBalance, setMyBalance] = useState(\"0\");\n\tconst [myAddress, setMyAddress] = useState(\"0x7Eb53D88C87F40A95248913ec6F851Ca8441FE0b\");\n\t\n\t// UI\n\tconst [qrvalue, setQrvalue] = useState(DEFAULT_QR_CODE);\n\tconst [tab, setTab] = useState(\"MARKET\"); // MARKET, MINT, WALLET\n\tconst [mintImageUrl, setMintImageUrl] = useState(\"\");\n\t\n\t// Modal\n\tconst [showModal, setShowModal] = useState(false);\n\tconst [modalProps, setModalProps] = useState({\n\t\ttitle: \"MODAL\",\n\t\tonConfirm: () => {},\n\t\t\n\t});\n\tconst rows = nfts.slice(nfts.length / 2);\n\t//fetchMarketNFT\n\tconst fetchMarketNFTs = async () => {\n\t\tconst _nfts = await fetchCardsOf(MARKET_CONTRACT_ADDRESS);\n\t\tsetNfts(_nfts);\n\t}\n\t//fetchMyNFTs\n\tconst fetchMyNFTs = async () => {\n\t\tif(myAddress === DEFAULT_ADDRESS){\n\t\t\talert(\"NO ADDRESS\");\n\t\t\treturn;\n\t\t}\n\t\tconst _nfts = await fetchCardsOf(myAddress);\n\t\t\n\t\tsetNfts(_nfts);\n\t\t// [{id:100, uri: \"https://~~.png}, {id:100, uri: \"https://~~.jpg}]\n\t\t// balanceOf -> 내가 가진 전체 NFT 토큰 개수를 가져온다\n\t\t// tokenOfOwnerByIndex -> 내가 가진 NFT token Id를 하나씩 가져온다 -> 배열로\n\t\t// 주소, 0 -> 100\n\t\t// 주소, 1 -> 101\n\t\t// tokenURI -> 앞에서 가져온 tokenId를 이요해서 tokenURI를 하나씩 가져온다.\n\t\t// 100 -> ~~.png\n\t\t// 101 -> ~~.jpg\n\t}\n\t// onClickMint\n\tconst onClickMint = async (uri) => {\n\t\tif(myAddress === DEFAULT_ADDRESS){\n\t\t\talert(\"NO ADDRESS\");\n\t\t\treturn;\n\t\t}\n\t\tconst randomTokenId = parseInt(Math.random() * 100000000);\n\t\tKlipAPI.mintCardWithURI(\n\t\t\tmyAddress, randomTokenId, uri, setQrvalue, (result) => {\n\t\t\t\talert(JSON.stringify(result));\n\t\t})\n\t}\n\tconst onClickCard = (id) => {\n\t\t\n\t\tif (tab === 'WALLET'){\n\t\t\tsetModalProps({\n\t\t\t\ttitle: \"NTF를 마켓에 올리시겠습니까?\",\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tonClickMyCard(id);\t\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetShowModal(true);\n\t\t\t\n\t\t}\n\t\tif (tab === 'MARKET'){\n\t\t\tsetModalProps({\n\t\t\t\ttitle: \"NTF를 구매하겠습니까?\",\n\t\t\t\tonConfirm: () => {\n\t\t\t\t\tonClickMarketCard(id);\t\n\t\t\t\t}\n\t\t\t});\n\t\t\tsetShowModal(true);\n\t\t\t\n\t\t}\n\t}\n\tconst onClickMyCard = (tokenId) => {\n\t\tKlipAPI.listingCard(myAddress, tokenId, setQrvalue, (result) =>{\n\t\t\talert(JSON.stringify(result));\n\t\t});\n\t}\n\tconst onClickMarketCard = (tokenId) => {\n\t\tKlipAPI.buyCard(tokenId, setQrvalue, (result) =>{\n\t\t\talert(JSON.stringify(result));\n\t\t});\n\t}\n\t// onClickMyCard\n\t// onClickMarketCard\n\t\n\t// getUserData\n\tconst getUserData = () => {\n\t\tsetModalProps({\n\t\t\ttitle: \"Klip 지갑을 연결하시겠습니까?\",\n\t\t\tonConfirm: () => {\n\t\t\t\tKlipAPI.getAddress(setQrvalue, async (address) => {\n\t\t\t\t\tsetMyAddress(address);\n\t\t\t\t\tconst _balance = await getBalance(address);\n\t\t\t\t\tsetMyBalance(_balance);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tsetShowModal(true);\n\t};\n\t\n\tuseEffect(() => {\n\t\tgetUserData();\n\t\tfetchMarketNFTs();\n   \t}, [])\n  return (\n    <div className=\"App\">\n\t\t<div style={{backgroundColor: \"black\", padding: 10}}>\n\t\t\t{/* 주소 잔고 */}\n\t\t\t<div style={{fontSize:30, fontWeight: \"bold\", paddingLeft:5, marginTop:10}}>내 지갑</div>\n\t\t\t{myAddress}\n\t\t\t<br/>\n\t\t\t<Alert \n\t\t\t\tonClick={getUserData}\n\t\t\t\tvariant={\"balance\"} style={{backgroundColor:\"skyblue\", fontSize: 25 }}>{myBalance}</Alert>\n\t\t\t{qrvalue !== 'DEFAULT' ? (\n\t\t\t<Container style={{backgroundColor:'white', width:300, height:300, padding:20}}>\n\t\t\t\t<QRCode value={qrvalue} size={256} style={{ margin: \"auto\"}}/>\n\t\t\t</Container>\n\t\t\t): null}\n\t\t\t<br/><br/>\n\t\t\t{/* 갤러리(마켓, 내 지갑) */}\n\t\t\t{tab === \"MARKET\" || tab === \"WALLET\" ? (\n\t\t\t\t<div className=\"container\" style={{padding:0, width:\"100%\"}}>\n\t\t\t\t\t{rows.map((o, rowIndex) => {\n\t\t\t\t\t\talert(rowIndex);\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col style={{marginRight: 0, paddingRight:0}}>\n\t\t\t\t\t\t\t\t<Card onClick={() => {\n\t\t\t\t\t\t\t\t\t\tonClickCard(nfts[rowIndex * 2].id);\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<Card.Img src={nfts[rowIndex * 2].uri} />\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t[{nfts[rowIndex * 2].id}]NFT\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t})}\n\t\t\t\t\t{/*<Card>\n\t\t\t\t\t\t{nfts.map((nft, index) => (\n\t\t\t\t\t\t\t<Card.Img \n\t\t\t\t\t\t\t\tkey={`imagekey${index}`}\n\t\t\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\t\t\tonClickCard(nft.id)\n\t\t\t\t\t\t\t\t}} \n\t\t\t\t\t\t\t\tclassName=\"img-responsive\" \n\t\t\t\t\t\t\t\tsrc={nfts[index].uri} \n\t\t\t\t\t\t\t\theight={\"15%\"}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Card>*/}\n\n\t\t\t\t</div>\t\n\t\t\t) : null}\n\t\t\t{/* 발행페이지 */}\n\t\t\t{tab === \"MINT\" ? \n\t\t\t\t<div className=\"container\" style={{padding:0, width:\"100%\"}}>\n\t\t\t\t\t<Card className=\"text-center\" style={{color:\"black\", height:\"50%\", borderColor:\"#C5B358\"}}>\n\t\t\t\t\t\t<Card.Body style={{oppacity: 0.9, backgroundColor:\"black\"}}>\n\t\t\t\t\t\t\t{mintImageUrl !== \"\" ? (\n\t\t\t\t\t\t\t\t<Card.Img  src={mintImageUrl} height={\"30%\"} />\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\tvalue={mintImageUrl}\n\t\t\t\t\t\t\t\t\tonChange={(e)=> {\n\t\t\t\t\t\t\t\t\t\tconsole.log(e.target.value);\n\t\t\t\t\t\t\t\t\t\tsetMintImageUrl(e.target.value);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"이미지 주소를 입력해주세요\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tonClickMint(mintImageUrl);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tvariant=\"primary\" style={{backgroundColor:\"cadetblue\", borderColor:\"cadetblue\"}}>발행하기</Button>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t</Card>\n\t\t\t </div>\n\t\t\t\t: null}\n\t  \t</div>\n\t\t<br/><br/><br/><br/><br/><br/><br/>\n\t\t{/* 모달 */}\t\n\t\t<Modal\n\t\tcentered\n\t\tsize=\"sm\"\n\t\tshow={showModal}\n\t\tonHide={() => {\n\t\t\tsetShowModal(false);\t  \n  \t\t}}>\n\t\t\t<Modal.Header style={{border:0, backgroundColor: \"black\", opacity: 0.8}}>\n\t\t\t<Modal.Title>{modalProps.title}</Modal.Title>\n\t\t\t</Modal.Header>\n\t\t\t<Modal.Footer style={{border: 0, backgroundColor:\"black\", opacity: 0.8}}>\n\t\t\t\t<Button variant=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tmodalProps.onConfirm();\n\t\t\t\t\t\tsetShowModal(false);\n\t\t\t\t\t}}\n\t\t\t\t\tstyle={{ backgroundColor: \"cadetblue\", borderColor: \"cadetblue\"}}\n\t\t\t\t>진행</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"secondray\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetShowModal(false);\n\t\t\t\t\t}}\n\t\t\t\t\t>닫기</Button>\n\t\t\t</Modal.Footer>\n\t\t</Modal>\n\t  \t{/* 탭 */}\n\t\t<nav style={{backgroundColor: \"#1b1717\", height: 45}}\n\t\t\tclassName=\"navbar fixed-bottom navbar-light\" \n\t\t\trole=\"navigation\">\n\t  \t\t<Nav className=\"w-100\">\n\t\t\t\t<div className=\"d-flex flex-row justify-content-around w-100\">\n\t\t\t\t\t<div \n\t\t\t\t\t\tonClick={()=>{\n\t\t\t\t\t\t\tsetTab(\"MARKET\");\n\t\t\t\t\t\t\tfetchMarketNFTs();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName = \"row d-flex flex-column justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div>MARKET</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={()=>{\n\t\t\t\t\t\t\tsetTab(\"MINT\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName = \"row d-flex flex-column justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div>MINT</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div onClick={()=>{\n\t\t\t\t\t\t\tsetTab(\"WALLET\");\n\t\t\t\t\t\t\tfetchMyNFTs();\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName = \"row d-flex flex-column justify-content-center align-items-center\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t<div>WALLET</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Nav>\n\t\t  </nav>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}