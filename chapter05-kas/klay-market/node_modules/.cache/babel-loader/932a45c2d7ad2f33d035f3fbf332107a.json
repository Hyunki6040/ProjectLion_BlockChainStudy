{"ast":null,"code":"import axios from \"axios\";\nimport { ACCESS_KEY_ID, SECRET_ACCESS_KEY, NFT_CONTRACT_ADDRESS, MARKET_CONTRACT_ADDRESS, CHAIN_ID } from '../constants';\nconst option = {\n  headers: {\n    Authorization: \"Basic \" + Buffer.from(ACCESS_KEY_ID + \":\" + SECRET_ACCESS_KEY).toString(\"base64\"),\n    \"x-chain-id\": CHAIN_ID,\n    \"content-type\": \"application/json\"\n  }\n};\nexport const uploadMetaData = async imageUrl => {\n  const _description = \"This is a KlayLion NFT\";\n  const _name = \"KlayLionNFT\";\n  const metadata = {\n    metadata: {\n      name: _name,\n      description: _description,\n      image: imageUrl\n    }\n  };\n\n  try {\n    const response = await axios.post('https://metadata-api.klaytnapi.com/v1/metadata', metadata, option);\n    console.log(`${JSON.stringify(response.data)}`);\n    return response.data.uri;\n  } catch (e) {\n    console.log(e);\n    return false;\n  }\n};","map":{"version":3,"sources":["/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/api/UseKAS.js"],"names":["axios","ACCESS_KEY_ID","SECRET_ACCESS_KEY","NFT_CONTRACT_ADDRESS","MARKET_CONTRACT_ADDRESS","CHAIN_ID","option","headers","Authorization","Buffer","from","toString","uploadMetaData","imageUrl","_description","_name","metadata","name","description","image","response","post","console","log","JSON","stringify","data","uri","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,EAAuBC,iBAAvB,EAA0CC,oBAA1C,EAAgEC,uBAAhE,EAAyFC,QAAzF,QAAwG,cAAxG;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,OAAO,EAAE;AACRC,IAAAA,aAAa,EAAE,WAAWC,MAAM,CAACC,IAAP,CAAYT,aAAa,GAAG,GAAhB,GAAsBC,iBAAlC,EAAqDS,QAArD,CAA8D,QAA9D,CADlB;AAER,kBAAcN,QAFN;AAGR,oBAAgB;AAHR;AADK,CAAf;AAOA,OAAO,MAAMO,cAAc,GAAG,MAAOC,QAAP,IAAoB;AACjD,QAAMC,YAAY,GAAG,wBAArB;AACA,QAAMC,KAAK,GAAG,aAAd;AAEA,QAAMC,QAAQ,GAAG;AAChBA,IAAAA,QAAQ,EAAG;AACVC,MAAAA,IAAI,EAAEF,KADI;AAEVG,MAAAA,WAAW,EAAEJ,YAFH;AAGVK,MAAAA,KAAK,EAAEN;AAHG;AADK,GAAjB;;AAQA,MAAI;AACH,UAAMO,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAN,CAAW,gDAAX,EAA6DL,QAA7D,EAAuEV,MAAvE,CAAvB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACM,IAAxB,CAA8B,EAA7C;AACA,WAAON,QAAQ,CAACM,IAAT,CAAcC,GAArB;AACA,GAJD,CAIE,OAAMC,CAAN,EAAS;AACVN,IAAAA,OAAO,CAACC,GAAR,CAAYK,CAAZ;AACA,WAAO,KAAP;AACA;AACD,CApBM","sourcesContent":["import axios from \"axios\";\nimport {ACCESS_KEY_ID, SECRET_ACCESS_KEY, NFT_CONTRACT_ADDRESS, MARKET_CONTRACT_ADDRESS, CHAIN_ID} from '../constants';\n\nconst option = {\n\theaders: {\n\t\tAuthorization: \"Basic \" + Buffer.from(ACCESS_KEY_ID + \":\" + SECRET_ACCESS_KEY).toString(\"base64\"),\n\t\t\"x-chain-id\": CHAIN_ID,\n\t\t\"content-type\": \"application/json\"\n\t}\n}\nexport const uploadMetaData = async (imageUrl) => {\n\tconst _description = \"This is a KlayLion NFT\";\n\tconst _name = \"KlayLionNFT\";\n\t\n\tconst metadata = {\n\t\tmetadata : {\n\t\t\tname: _name,\n\t\t\tdescription: _description,\n\t\t\timage: imageUrl\n\t\t}\n\t}\n\t\n\ttry {\n\t\tconst response = await axios.post('https://metadata-api.klaytnapi.com/v1/metadata', metadata, option);\n\t\tconsole.log(`${JSON.stringify(response.data)}`);\n\t\treturn response.data.uri;\n\t} catch(e) {\n\t\tconsole.log(e);\n\t\treturn false;\n\t}\n}"]},"metadata":{},"sourceType":"module"}