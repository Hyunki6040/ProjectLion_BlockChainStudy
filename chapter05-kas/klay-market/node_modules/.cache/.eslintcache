[{"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/index.js":"1","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js":"2","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/reportWebVitals.js":"3","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/api/UseCaver.js":"4","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/api/UseKlip.js":"5","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/constants/index.js":"6","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/constants/constants.cypress.js":"7","/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/index.js":"8","/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/reportWebVitals.js":"9","/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/App.js":"10","/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/api/UseCaver.js":"11","/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/api/UseKlip.js":"12","/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/constants/index.js":"13","/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/constants/constants.cypress.js":"14","/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/api/UseKAS.js":"15"},{"size":500,"mtime":1644042340092,"results":"16","hashOfConfig":"17"},{"size":8206,"mtime":1645095482155,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1644042340016,"results":"19","hashOfConfig":"17"},{"size":1525,"mtime":1644050326541,"results":"20","hashOfConfig":"17"},{"size":4849,"mtime":1645090017801,"results":"21","hashOfConfig":"17"},{"size":36,"mtime":1644042340144,"results":"22","hashOfConfig":"17"},{"size":610,"mtime":1645179751079,"results":"23","hashOfConfig":"17"},{"size":500,"mtime":1645180717847,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1645180717847,"results":"26","hashOfConfig":"25"},{"size":9090,"mtime":1645183977355,"results":"27","hashOfConfig":"25"},{"size":1725,"mtime":1645181778159,"results":"28","hashOfConfig":"25"},{"size":4850,"mtime":1645183724708,"results":"29","hashOfConfig":"25"},{"size":36,"mtime":1645180717847,"results":"30","hashOfConfig":"25"},{"size":464,"mtime":1645181746652,"results":"31","hashOfConfig":"25"},{"size":830,"mtime":1645182026289,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"3v740m",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"s2vg28",{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"51"},"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/index.js",[],["68","69"],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/App.js",[],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/reportWebVitals.js",[],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/api/UseCaver.js",["70"],"import Caver from 'caver-js';\nimport KIP17ABI from '../abi/KIP17TokenABI.json';\nimport {ACCESS_KEY_ID, SECRET_ACCESS_KEY, NFT_CONTRACT_ADDRESS, MARKET_CONTRACT_ADDRESS, CHAIN_ID} from '../constants';\n\nconst option = {\n\theaders: [\n\t\t{\n\t\t\tname: \"Authorization\",\n\t\t\tvalue: \"Basic \" + Buffer.from(ACCESS_KEY_ID + \":\" + SECRET_ACCESS_KEY).toString(\"base64\")\n\t\t},\n\t\t{\n\t\t\tname: \"x-chain-id\", value: CHAIN_ID\n\t\t}\n\t]\n}\n\nconst caver = new Caver(new Caver.providers.HttpProvider(\"https://node-api.klaytnapi.com/v1/klaytn\", option));\nconst NFTContract = new caver.contract(KIP17ABI,NFT_CONTRACT_ADDRESS);\n\n\nexport const fetchCardsOf = async (address) => {\n\t// Fetch getBalance\n\tconst balance = await NFTContract.methods.balanceOf(address).call();\n\tconsole.log(`[NFT Balance] ${balance}`);\n\t// Fetch Token IDs\n\tconst tokenIds = [];\n\tfor(let i =0; i<balance; i++){\n\t\tconst id = await NFTContract.methods.tokenOfOwnerByIndex(address, i).call();\n\t\ttokenIds.push(id);\n\t}\n\t\n\t// Fetch Token URIs\n\tconst tokenUris = [];\n\tfor(let i =0; i<balance; i++){\n\t\tconst uri = await NFTContract.methods.tokenURI(tokenIds[i]).call();\n\t\ttokenUris.push(uri);\n\t}\n\t\n\tconst nfts = [];\n\tfor(let i =0; i<balance; i++){\n\t\tnfts.push({uri: tokenUris[i], id: tokenIds[i] });\n\t}\n\tconsole.log(nfts);\n\treturn nfts;\n}\n\nexport const getBalance = (address) => {\n\treturn caver.rpc.klay.getBalance(address).then((respose) => {\n\t\tconst balance = caver.utils.convertFromPeb(caver.utils.hexToNumberString(respose));\n\t\tconsole.log(`BALANCE: ${balance}`); \n\t\treturn balance;\n\t})\n}\n","/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/api/UseKlip.js",[],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/constants/index.js",[],"/workspace/ProjectLion_BlockCha/chapter05/klay-market/src/constants/constants.cypress.js",["71"],"/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/index.js",[],["72","73"],"/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/reportWebVitals.js",[],"/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/App.js",["74"],"/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/api/UseCaver.js",["75"],"import Caver from 'caver-js';\nimport axios from \"axios\";\nimport KIP17ABI from '../abi/KIP17TokenABI.json';\nimport {ACCESS_KEY_ID, SECRET_ACCESS_KEY, NFT_CONTRACT_ADDRESS, MARKET_CONTRACT_ADDRESS, CHAIN_ID} from '../constants';\n\nconst option = {\n\theaders: [\n\t\t{\n\t\t\tname: \"Authorization\",\n\t\t\tvalue: \"Basic \" + Buffer.from(ACCESS_KEY_ID + \":\" + SECRET_ACCESS_KEY).toString(\"base64\")\n\t\t},\n\t\t{\n\t\t\tname: \"x-chain-id\", value: CHAIN_ID\n\t\t}\n\t]\n}\n\nconst caver = new Caver(new Caver.providers.HttpProvider(\"https://node-api.klaytnapi.com/v1/klaytn\", option));\nconst NFTContract = new caver.contract(KIP17ABI,NFT_CONTRACT_ADDRESS);\n\n\nexport const fetchCardsOf = async (address) => {\n\t// Fetch getBalance\n\tconst balance = await NFTContract.methods.balanceOf(address).call();\n\tconsole.log(`[NFT Balance] ${balance}`);\n\t// Fetch Token IDs\n\tconst tokenIds = [];\n\tfor(let i =0; i<balance; i++){\n\t\tconst id = await NFTContract.methods.tokenOfOwnerByIndex(address, i).call(); \n\t\ttokenIds.push(id);\n\t}\n\t\n\t// Fetch Token URIs\n\tconst tokenUris = [];\n\tfor(let i =0; i<balance; i++){\n\t\tconst metadataUrl = await NFTContract.methods.tokenURI(tokenIds[i]).call(); // -> metadata kas 주소\n\t\tconst response = await axios.get(metadataUrl); // 실제 메타데이터가 들어있다.\n\t\tconst uriJson = response.data;\n\t\t\n\t\ttokenUris.push(uriJson.image);\n\t}\n\t\n\tconst nfts = [];\n\tfor(let i =0; i<balance; i++){\n\t\tnfts.push({uri: tokenUris[i], id: tokenIds[i] });\n\t}\n\tconsole.log(nfts);\n\treturn nfts;\n}\n\nexport const getBalance = (address) => {\n\treturn caver.rpc.klay.getBalance(address).then((respose) => {\n\t\tconst balance = caver.utils.convertFromPeb(caver.utils.hexToNumberString(respose));\n\t\tconsole.log(`BALANCE: ${balance}`); \n\t\treturn balance;\n\t})\n}\n","/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/api/UseKlip.js",[],"/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/constants/index.js",[],"/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/constants/constants.cypress.js",[],"/workspace/ProjectLion_BlockCha/chapter05-kas/klay-market/src/api/UseKAS.js",["76","77"],"import axios from \"axios\";\nimport {ACCESS_KEY_ID, SECRET_ACCESS_KEY, NFT_CONTRACT_ADDRESS, MARKET_CONTRACT_ADDRESS, CHAIN_ID} from '../constants';\n\nconst option = {\n\theaders: {\n\t\tAuthorization: \"Basic \" + Buffer.from(ACCESS_KEY_ID + \":\" + SECRET_ACCESS_KEY).toString(\"base64\"),\n\t\t\"x-chain-id\": CHAIN_ID,\n\t\t\"content-type\": \"application/json\"\n\t}\n}\nexport const uploadMetaData = async (imageUrl) => {\n\tconst _description = \"This is a KlayLion NFT\";\n\tconst _name = \"KlayLionNFT\";\n\t\n\tconst metadata = {\n\t\tmetadata : {\n\t\t\tname: _name,\n\t\t\tdescription: _description,\n\t\t\timage: imageUrl\n\t\t}\n\t}\n\t\n\ttry {\n\t\tconst response = await axios.post('https://metadata-api.klaytnapi.com/v1/metadata', metadata, option);\n\t\tconsole.log(`${JSON.stringify(response.data)}`);\n\t\treturn response.data.uri;\n\t} catch(e) {\n\t\tconsole.log(e);\n\t\treturn false;\n\t}\n}",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":3,"column":65,"nodeType":"84","messageId":"85","endLine":3,"endColumn":88},{"ruleId":"86","severity":2,"message":"87","line":7,"column":1,"nodeType":"88","messageId":"89","endLine":7,"endColumn":43},{"ruleId":"78","replacedBy":"90"},{"ruleId":"80","replacedBy":"91"},{"ruleId":null,"fatal":true,"severity":2,"message":"92","line":193,"column":11},{"ruleId":"82","severity":1,"message":"83","line":4,"column":65,"nodeType":"84","messageId":"85","endLine":4,"endColumn":88},{"ruleId":"82","severity":1,"message":"93","line":2,"column":43,"nodeType":"84","messageId":"85","endLine":2,"endColumn":63},{"ruleId":"82","severity":1,"message":"83","line":2,"column":65,"nodeType":"84","messageId":"85","endLine":2,"endColumn":88},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'MARKET_CONTRACT_ADDRESS' is defined but never used.","Identifier","unusedVar","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression",["94"],["95"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 191 |\u001b[39m \t\t\t\t\t\t\t\u001b[33m<\u001b[39m\u001b[33mForm\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 192 |\u001b[39m \t\t\t\t\t\t\t\t\u001b[33m<\u001b[39m\u001b[33mForm\u001b[39m\u001b[33m.\u001b[39m\u001b[33mGroup\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 193 |\u001b[39m \t\t\t\t\t\t\t\t\t\u001b[33m<\u001b[39m\u001b[33m!\u001b[39m\u001b[33m--\u001b[39m 내일 시간 나면 수정해보기 \u001b[33m--\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m     |\u001b[39m \t\t\t\t\t\t\t\t\t \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 194 |\u001b[39m \t\t\t\t\t\t\t\t\t\u001b[33m<\u001b[39m\u001b[33mForm\u001b[39m\u001b[33m.\u001b[39m\u001b[33mControl\u001b[39m \u001b[0m\n\u001b[0m \u001b[90m 195 |\u001b[39m \t\t\t\t\t\t\t\t\tvalue\u001b[33m=\u001b[39m{mintTokenID}\u001b[0m\n\u001b[0m \u001b[90m 196 |\u001b[39m \t\t\t\t\t\t\t\t\tonChange\u001b[33m=\u001b[39m{(e)\u001b[33m=>\u001b[39m {\u001b[0m","'NFT_CONTRACT_ADDRESS' is defined but never used.","no-global-assign","no-unsafe-negation"]